name: Run Fast Test On QA Site

on:
  push:
    branches: ["develop"]
  workflow_dispatch:
    inputs:
      configfile:
        description: 'Execution Profile'
        required: true
        default: 'qa'
        type: choice
        options:
          - staging
          - qa
          - production
      testsuite:
        description: 'Testsuite'
        required: true
        default: APIs Test
        type: choice
        options:
          - APIs Test
          - Fast Test
          - Story Test
          - Feature Test
          - P1 Test
          - P2 Test
          - P3 Test
      browser:
        description: 'Browser'
        required: true
        default: Chrome
        type: choice
        options:
          - Chrome
          - Firefox
          - IE
          - Safari
          - Edge
          - Edge Chromium
      slacknotify:
        description: 'Send slack notification'
        required: true
        default: true
        #type: boolean

jobs:
  build:
    name: Run Fast Test On QA Site
    runs-on: windows-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Execute test by manual trigger
      if: ${{ github.event.inputs.browser !='' }}
      id: execute-test-manual
      uses: katalon-studio/katalon-studio-github-action@v2.2
      with:
          version: '8.5.2'
          projectPath: '${{ github.workspace }}'
          args: '-noSplash -retry=0 -testSuitePath= "Test Suites" -browserType= ${{ env.BROWSER }} -executionProfile= ${{ github.event.inputs.configfile }} -apiKey= ${{ secrets.API_KEY }} -orgID=${{ secrets.ORG_ID }} -testOpsProjectId=${{ secrets.PROJECT_ID }} --config -webui.autoUpdateDrivers=true'         
      env:
       BROWSER: ${{ github.event.inputs.browser }}

    - name: Execute test when push
      id: execute-test-push
      if: ${{ github.event.inputs.browser == '' && github.event_name == 'push' }}
      uses: katalon-studio/katalon-studio-github-action@v2.2
      with:
          version: '8.5.2'
          projectPath: '${{ github.workspace }}'
          args: '-noSplash -retry=0 -testSuitePath="Test Suites/Fast Test" -browserType=Chrome -executionProfile=qa -apiKey= ${{ secrets.API_KEY }} -orgID=${{ secrets.ORG_ID }} -testOpsProjectId=${{ secrets.PROJECT_ID }} --config -webui.autoUpdateDrivers=true'                 

  sendSlack:
    if: ${{ always() }}
    needs: build
    name: Send Slack Message After Test
    runs-on: windows-latest
    steps:

    - name: Send Github APIs to get info
      id: get-github-info
      run: |
        $headers = @{
            Accept = "application/vnd.github+json"
            Authorization = "Bearer ${{ secrets.GITHUB_TOKEN }}"
            'X-GitHub-Api-Version' = "2022-11-28"
        }
        
        $param = @{
            Uri         = "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            Method      = "Get"  
            Headers     = $headers
        }

        $run = Invoke-RestMethod @param

        $jobsUrl= $run.jobs_url

        $param = @{
            Uri         = "$jobsUrl"
            Method      = "Get"  
            Headers      =  $headers
        }

        $job = Invoke-RestMethod @param

        $id = $job.jobs[0].id

        $param = @{
            Uri         = "https://api.github.com/repos/${{ github.repository }}/actions/jobs/$id/logs"
            Method      = "Get"  
            Headers      =  $headers
        }

        $log = Invoke-RestMethod @param
        
        echo "log<<EOF" >> $env:GITHUB_OUTPUT
        echo "$log" >> $env:GITHUB_OUTPUT
        echo "EOF" >> $env:GITHUB_OUTPUT

    - name: Extract TestOps URL
      id: extract-testops-url
      run: |
        @"
        ${{ steps.get-github-info.outputs.log }}
        "@ -match ".*Katalon TestOps - Execution URL: (?<content>.*).*"
        $testOpsUrl = $matches['content'].replace("`r", "").replace("`n", "").replace("projectId=***", "projectId=${{ secrets.PROJECT_ID }}")

        echo "testOpsUrl=$testOpsUrl" >> $env:GITHUB_OUTPUT

    - name: Find Owner Slack Id
      id: find-owner-slack-id
      if: ${{ always() }}
      run: |
        function Find-Slack-Id {
          param (
            $Name,
            $SlackUsers
          )

          foreach ($element in $SlackUsers) {
            if ($Name -eq $element.gitHubName) {
              return "<@" + $element.slackUserId + ">"
            }
          }

          return $Name
        }

        $users = @"
        ${{ secrets.KATALON_USERS }}
        "@ | ConvertFrom-Json
        $owner = Find-Slack-Id -Name "${{ github.event.pusher.name }}" -SlackUsers $users
        
        echo "owner=$owner" >> $env:GITHUB_OUTPUT

    - name: Extract Failed Tests And Assign Test Owners
      id: extract-failed-tests
      if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
      run: |
        function Find-Script-Owner {
          param (
            $TestName,
            $ScriptOwners
          )

          foreach ($element in $ScriptOwners) {
            if ($TestName.SubString(5, 4) -eq $element.katalonId) {
              return "<@" + $element.slackUserId + ">"
            }
          }

          return "Unknown Owner"
        }

        $scriptOwners = @"
        ${{ secrets.KATALON_USERS }}
        "@ | ConvertFrom-Json

        $failedTests = @"
        ${{ steps.get-github-info.outputs.log }}
        "@ | Select-String -Pattern ".*TestCaseExecutor.*Test Cases/(.*?) FAILED.*" -AllMatches | ForEach-Object {$_.matches} | ForEach-Object {$_.Groups[1].Value}
        
        if ($failedTests.GetType().Name -eq 'String') {
          $testName = $failedTests.Split("/")[-1]
          $owner = Find-Script-Owner -TestName $testName -ScriptOwners $scriptOwners
          $result = ">" + $owner + " " + $testName + "\n"
        } else {
          $failedTests = $failedTests | select -Unique
          $result = foreach ($element in $failedTests) { 
            $testName = $element.Split("/")[-1]
            $owner = Find-Script-Owner -TestName $testName -ScriptOwners $scriptOwners
            ">" + $owner + " " + $testName + "\n"
          }
        }
        $result = "$result"
        $result = $result.replace(' >','>')

        echo "failedTests=$result" >> $env:GITHUB_OUTPUT

    - name: 'Slack Test Failed Notification'
      if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
      uses: slackapi/slack-github-action@v1.16.0
      with:
          payload: "{
            \"blocks\": [
              {
                \"type\": \"context\",
                \"elements\": [
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"Hi ${{ steps.find-owner-slack-id.outputs.owner }}:bongo_blob:,\"
                  }
                ]
              },
              {
                \"type\": \"header\",
                \"text\": {
                  \"type\": \"plain_text\",
                  \"text\": \":katalon-new: Fast test has FAILED :no_entry:\",
                  \"emoji\": true
                }
              },
              {
                \"type\": \"divider\"
              },
              {
                \"type\": \"context\",
                \"elements\": [
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \">On Branch: *${{ github.ref_name }}* \\n>TestOps URL: ${{ steps.extract-testops-url.outputs.testOpsUrl }} \\n>Build URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"
                  }
                ]
              },
              {
                \"type\": \"header\",
                \"text\": {
                  \"type\": \"plain_text\",
                  \"text\": \":no_entry: FAILED Tests\",
                  \"emoji\": true
                }
              },
              {
                \"type\": \"divider\"
              },
              {
                \"type\": \"context\",
                \"elements\": [
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"${{ steps.extract-failed-tests.outputs.failedTests }} \"
                  }
                ]
              },
              {
                \"type\": \"divider\"
              }
            ]
          }"
      env: 
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

    - name: 'Slack Test Passed Notification'
      if: ${{ always() && !contains(join(needs.*.result, ','), 'failure') }}
      uses: slackapi/slack-github-action@v1.16.0
      with:
          payload: "{
            \"blocks\": [
              {
                \"type\": \"context\",
                \"elements\": [
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"Hi ${{ steps.find-owner-slack-id.outputs.owner }}:bongo_blob:,\"
                  }
                ]
              },
              {
                \"type\": \"header\",
                \"text\": {
                  \"type\": \"plain_text\",
                  \"text\": \":katalon-new: Fast test has successfully PASSED :white_check_mark:\",
                  \"emoji\": true
                }
              },
              {
                \"type\": \"divider\"
              },
              {
                \"type\": \"context\",
                \"elements\": [
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \">On Branch: *${{ github.ref_name }}* \\n>TestOps URL: ${{ steps.extract-testops-url.outputs.testOpsUrl }} \\n>Build URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"
                  }
                ]
              },
              {
                \"type\": \"divider\"
              }
            ]
          }"
      env: 
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
